name: Docker Image CI

on:
    workflow_dispatch:
        inputs:
            tag:
                description: 'Release Tag'
                required: true
    push:
        branches:
            - main
            - dev
        paths:
            - 'docker/**'
            - 'docker-compose.yaml'
            - 'DockerFile'
            - 'startDocker.*'
            - 'data/**'
            - 'README.md'

jobs:
    build:
        name: Build Docker Image
        runs-on: ubuntu-latest
        permissions:
            contents: write
        outputs:
            tag: ${{ steps.set_release_info.outputs.TAG }}
            prerelease: ${{ steps.set_release_info.outputs.PRERELEASE }}

        steps:
            - name: 读取仓库的内容
              uses: actions/checkout@v4

            - name: Set Release Tag and Prerelease Status
              id: set_release_info
              run: |
                  TIMESTAMP=$(date +%Y%m%d%H%M%S)
                  SHORT_SHA=$(git rev-parse --short HEAD)

                  if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.tag }}" ]]; then
                    echo "TAG=${{ github.event.inputs.tag }}-$TIMESTAMP" >> $GITHUB_ENV
                    echo "PRERELEASE=false" >> $GITHUB_ENV
                  elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
                    echo "TAG=beta-$SHORT_SHA" >> $GITHUB_ENV
                    echo "PRERELEASE=true" >> $GITHUB_ENV
                  else
                    echo "TAG=latest-$SHORT_SHA" >> $GITHUB_ENV
                    echo "PRERELEASE=false" >> $GITHUB_ENV
                  fi

                  echo "TAG=${TAG}" >> $GITHUB_OUTPUT
                  echo "PRERELEASE=${PRERELEASE}" >> $GITHUB_OUTPUT
            - name: Update .env.docker
              run: |
                  sed -i "s/DOCKER_RELEASE=.*/DOCKER_RELEASE=${{ steps.set_release_info.outputs.TAG }}/" docker/.env.docker

            - name: 登陆 Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_TOKEN }}

            - name: 构建并推送到 Push to Docker Hub
              uses: docker/build-push-action@v5
              with:
                  push: true
                  tags: aminnausin/mediaserver:${{ steps.set_release_info.outputs.TAG }}

    check_changes:
        name: Check for Docker Related File Changes
        runs-on: ubuntu-latest
        outputs:
            files_changed: ${{ steps.filter.outputs.changes != '[]' }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Check for file changes
              id: filter
              uses: dorny/paths-filter@v2
              with:
                  filters: |
                      changed:
                          - 'docker/**'
                          - 'docker-compose.yaml'
                          - 'DockerFile'
                          - 'startDocker.*'
                          - 'data/**'
                          - 'README.md'

    release:
        name: Create GitHub Release
        runs-on: ubuntu-latest
        needs: [build, check_changes]
        if: needs.check_changes.outputs.files_changed == 'true' || github.event_name == 'workflow_dispatch'
        permissions:
            contents: write
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Zip Files Linux
              run: |
                  zip -r mediaServerDockerLinux.zip ./docker/etc ./docker/.env.docker ./docker-compose.yaml ./startDocker.sh ./README.md ./data/avatars

            - name: Zip Files Windows
              run: |
                  zip -r mediaServerDockerWindows.zip ./docker/etc ./docker/.env.docker ./docker-compose.yaml ./startDocker.bat ./README.md ./data/avatars
            - name: Create Release
              uses: ncipollo/release-action@v1
              with:
                  allowUpdates: false
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag: ${{ needs.build.outputs.tag }}
                  name: Docker Release - ${{ needs.build.outputs.tag }}
                  draft: false
                  prerelease: ${{ needs.build.outputs.prerelease }}
                  artifacts: mediaServerDockerLinux.zip,mediaServerDockerWindows.zip
