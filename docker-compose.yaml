services:
    app:
        image: aminnausin/mediaserver:latest
        container_name: MediaServer
        volumes:
            - app-public:/var/www/html/public
            - ./data:/var/www/html/storage/app/public
        restart: unless-stopped
        networks:
            - docker-network
        ports:
            - 9000:9000
        expose:
            - '9000'
        depends_on:
            - db
        environment:
            - DB_HOST=db
            - DB_PORT=5432
            - DB_DATABASE=mediaServer
            - DB_USERNAME=postgres
            - DB_PASSWORD=root
    queue:
        image: aminnausin/mediaserver:latest
        container_name: job_queue
        command: php artisan queue:work --timeout=3600 --tries=3
        restart: unless-stopped
        tty: true
        volumes:
            - ./data:/var/www/html/storage/app/public
        networks:
            - docker-network
        depends_on:
            - db
        environment:
            - DB_HOST=db
            - DB_PORT=5432
            - DB_DATABASE=mediaServer
            - DB_USERNAME=postgres
            - DB_PASSWORD=root
    event-queue:
        image: aminnausin/mediaserver:latest
        container_name: event_queue
        command: php artisan queue:work --queue=high --tries=3
        restart: unless-stopped
        tty: true
        volumes:
            - ./data:/var/www/html/storage/app/public
        networks:
            - docker-network
        depends_on:
            - db
        environment:
            - DB_HOST=db
            - DB_PORT=5432
            - DB_DATABASE=mediaServer
            - DB_USERNAME=postgres
            - DB_PASSWORD=root
    scheduler:
        image: aminnausin/mediaserver:latest
        container_name: laravel_scheduler
        command: php artisan schedule:work
        restart: unless-stopped
        tty: true
        volumes:
            - ./data:/var/www/html/storage/app/public
        networks:
            - docker-network
        depends_on:
            - db
        environment:
            - DB_HOST=db
            - DB_PORT=5432
            - DB_DATABASE=mediaServer
            - DB_USERNAME=postgres
            - DB_PASSWORD=root
    # pulse:
    #     image: aminnausin/mediaserver:latest
    #     container_name: pulse
    #     command: php artisan pulse:check
    #     restart: unless-stopped
    #     tty: true
    #     volumes:
    #         - ./data:/var/www/html/storage/app/public
    #     networks:
    #         - docker-network
    #     depends_on:
    #         - db
    #     environment:
    #         - DB_HOST=db
    #         - DB_PORT=5432
    #         - DB_DATABASE=mediaServer
    #         - DB_USERNAME=postgres
    #         - DB_PASSWORD=root
    ws:
        image: aminnausin/mediaserver:latest
        container_name: ws
        command: php artisan reverb:start
        restart: unless-stopped
        tty: true
        volumes:
            - ./data:/var/www/html/storage/app/public
        ports:
            - 6001:6001
        expose:
            - '6001'
        networks:
            - docker-network
        depends_on:
            - db
        environment:
            - DB_HOST=db
            - DB_PORT=5432
            - DB_DATABASE=mediaServer
            - DB_USERNAME=postgres
            - DB_PASSWORD=root
    nginx:
        image: nginx:alpine
        container_name: nginx
        volumes:
            - ./docker/nginx/app.conf:/etc/nginx/conf.d/default.conf
            - ./data:/var/www/html/storage/app/public
            - app-public:/var/www/html/public
        ports:
            - '8080:8080'
        expose:
            - '8080'
        depends_on:
            - app
        networks:
            - docker-network
    db:
        image: bitnami/postgresql:17.2.0
        container_name: database
        platform: linux/amd64
        ports:
            - 5432:5432
        restart: always
        volumes:
            - db-data:/bitnami/postgresql
        environment:
            - POSTGRESQL_DATABASE=${DB_DATABASE}
            - POSTGRESQL_USERNAME=${DB_USERNAME}
            - POSTGRESQL_PASSWORD=${DB_PASSWORD}
        networks:
            - docker-network

volumes:
    db-data:
        driver: local
    app-public:
        driver: local

networks:
    docker-network:
        driver: bridge

    # caddy:
    #     image: caddy:2.9.1-alpine
    #     container_name: caddy
    #     ports:
    #         - 80:80
    #         - 443:443
    #         - 443:443/udp
    #     volumes:
    #         - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
    #     networks:
    #         - docker-network
    #     depends_on:
    #         - nginx
