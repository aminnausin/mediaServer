services:
    app:
        image: aminnausin/mediaserver:latest
        container_name: MediaServer
        volumes:
            - app-public:/var/www/html/public
            - ./data:/var/www/html/storage/app/public
        restart: unless-stopped
        ports:
            - 9000:9000
        expose:
            - '9000'
        depends_on:
            - db
        env_file:
            - .env
    queue:
        image: aminnausin/mediaserver:latest
        container_name: job_queue
        command: php artisan queue:work --timeout=3600 --tries=3
        restart: unless-stopped
        volumes:
            - ./data:/var/www/html/storage/app/public
        depends_on:
            - db
        env_file:
            - .env
        stop_grace_period: 5s
        stop_signal: SIGTERM
    event-queue:
        image: aminnausin/mediaserver:latest
        container_name: event_queue
        command: php artisan queue:work --queue=high --tries=3
        restart: unless-stopped
        volumes:
            - ./data:/var/www/html/storage/app/public
        depends_on:
            - db
        env_file:
            - .env
        stop_grace_period: 5s
        stop_signal: SIGTERM
    scheduler:
        image: aminnausin/mediaserver:latest
        container_name: laravel_scheduler
        command: php artisan schedule:work
        restart: unless-stopped
        volumes:
            - ./data:/var/www/html/storage/app/public
        depends_on:
            - db
        env_file:
            - .env
        stop_grace_period: 5s
        stop_signal: SIGTERM
    ws:
        image: aminnausin/mediaserver:latest
        container_name: ws
        command: php artisan reverb:start
        restart: unless-stopped
        volumes:
            - ./data:/var/www/html/storage/app/public
        ports:
            - 6001:6001
        expose:
            - '6001'
        depends_on:
            - db
        env_file:
            - .env
        stop_grace_period: 5s
        stop_signal: SIGTERM
    nginx:
        image: nginx:alpine
        container_name: nginx
        volumes:
            - ./docker/nginx/app.conf:/etc/nginx/conf.d/default.conf
            - ./data:/var/www/html/storage/app/public
            - app-public:/var/www/html/public
            - ./docker/nginx/entrypoint.sh:/entrypoint.sh
        ports:
            - '${APP_PORT}:${APP_PORT}'
        expose:
            - ${APP_PORT}
        depends_on:
            - app
        env_file:
            - .env
    caddy:
        image: caddy:2.9.1-alpine
        container_name: caddy
        ports:
            - 80:80
            - 443:443
            - 443:443/udp
        volumes:
            - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
        depends_on:
            - nginx
    db:
        image: bitnami/postgresql:17.2.0
        container_name: database
        platform: linux/amd64
        ports:
            - 5432:5432
        restart: always
        volumes:
            - db-data:/bitnami/postgresql
        environment:
            - POSTGRESQL_DATABASE=${DB_DATABASE}
            - POSTGRESQL_USERNAME=${DB_USERNAME}
            - POSTGRESQL_PASSWORD=${DB_PASSWORD}
volumes:
    db-data:
        driver: local
    app-public:
        driver: local
networks:
    default:
        driver: bridge
