services:
  app: &app
    image: aminnausin/mediaserver:${DOCKER_RELEASE:-latest}
    container_name: mediaserver
    volumes:
      - ./data:/var/www/html/storage/app/public
      - ./logs/mediaServer:/var/www/html/storage/logs
      - ./docker/etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
      - shared-env:/var/www/html/shared
    ports:
      - '${APP_PORT:-8080}:8080'
    expose:
      - '${APP_PORT:-8080}'
    environment:
      - SHARED_UID=9999
      - SHARED_GID=9999
      - HEALTHCHECK_PATH=/api/health
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://${APP_HOST:-app.test}:8080/api/health || exit 1
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      default:
      mediaserver-redis:
      mediaserver-db:
        aliases:
          - ${APP_HOST:-app.test}
  redis:
    image: redis:8-alpine
    container_name: redis
    command: "redis-server --appendonly yes --requirepass phpredis"
    networks:
      mediaserver-redis:
  horizon:
    <<: *app
    container_name: horizon
    command: ["php", "/var/www/html/artisan", "horizon"]
    init: true
    environment:
      - LOG_FILENAME=laravel-horizon.log
      - REVERB_PORT=6001
      - REVERB_HOST=ws.${APP_HOST:-app.test}
      - REVERB_SCHEME=http
    stop_signal: SIGTERM
    depends_on:
      app:
        condition: service_healthy
    ports: []
    expose: []
    healthcheck:
      test: ["CMD", "healthcheck-horizon"]
      start_period: 10s
    networks:
      mediaserver-redis:
      mediaserver-db:
        aliases: []
    labels: []
  # queue:
  #   <<: *app
  #   container_name: job-queue
  #   command: ['php', '/var/www/html/artisan', 'queue:work', '--tries=3']
  #   environment:
  #     - LOG_FILENAME=laravel-queue.log
  #     - REVERB_PORT=6001
  #     - REVERB_HOST=ws.${APP_HOST:-app.test}
  #     - REVERB_SCHEME=http
  #   ports: []
  #   expose: []
  #   stop_grace_period: 5s
  #   stop_signal: SIGTERM
  #   depends_on:
  #     app:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ['CMD', 'healthcheck-queue']
  #     start_period: 10s
  #   networks:
  #     default:
  #     mediaserver-redis:
  #     mediaserver-db:
  #       aliases: []
  #   labels: []
  # event-queue:
  #   <<: *app
  #   container_name: event-queue
  #   command: ['php', '/var/www/html/artisan', 'queue:work', '--queue=high', '--tries=3']
  #   environment:
  #     - LOG_FILENAME=laravel-event-queue.log
  #     - REVERB_PORT=6001
  #     - REVERB_HOST=ws.${APP_HOST:-app.test}
  #     - REVERB_SCHEME=http
  #   ports: []
  #   expose: []
  #   stop_grace_period: 5s
  #   stop_signal: SIGTERM
  #   depends_on:
  #     app:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ['CMD', 'healthcheck-queue']
  #   networks:
  #     default:
  #     mediaserver-redis:
  #     mediaserver-db:
  #       aliases: []
  #   labels: []
  scheduler:
    <<: *app
    container_name: laravel-scheduler
    command: ['php', '/var/www/html/artisan', 'schedule:work']
    init: true
    environment:
      - LOG_FILENAME=laravel-scheduler.log
    ports: []
    expose: []
    stop_grace_period: 5s
    stop_signal: SIGTERM
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'healthcheck-schedule']
    networks:
      default:
      mediaserver-redis:
      mediaserver-db:
        aliases: []
    labels: []
  ws:
    <<: *app
    container_name: ws
    command: php artisan reverb:start
    init: true
    ports: []
    expose:
      - 6001
    environment:
      - LOG_FILENAME=laravel-ws.log
    stop_grace_period: 5s
    stop_signal: SIGTERM
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "healthcheck-reverb"]
      start_period: 10s
    networks:
      default:
      mediaserver-redis:
      mediaserver-db:
        aliases:
          - ws.${APP_HOST:-app.test}
    labels: []
  pulse:
    <<: *app
    container_name: laravel-pulse
    command: ['php', '/var/www/html/artisan', 'pulse:work']
    init: true
    environment:
      - LOG_FILENAME=laravel-pulse.log
    ports: []
    expose: []
    stop_grace_period: 5s
    stop_signal: SIGTERM
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "php", "artisan", "pulse:check"]
    networks:
      default:
      mediaserver-redis:
      mediaserver-db:
        aliases: []
    labels: []
  caddy:
    image: "lucaslorentz/caddy-docker-proxy:ci-alpine"
    container_name: caddy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/etc/caddy/Caddyfile:/etc/caddy/Caddyfile
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./caddy/data:/data
      - ./caddy/config:/config
      - ./logs/caddy:/var/log/caddy
    restart: unless-stopped
    environment:
      - CADDY_DOCKER_CADDYFILE_PATH=/etc/caddy/Caddyfile
      - CADDY_INGRESS_NETWORKS=default
  postgres:
    image: bitnami/postgresql:17.2.0
    container_name: database
    platform: linux/amd64
    ports:
      - 5432:5432
    restart: always
    volumes:
      - db-data:/bitnami/postgresql
    environment:
      - POSTGRESQL_DATABASE=${DB_DATABASE:-mediaServer}
      - POSTGRESQL_USERNAME=${DB_USERNAME:-postgres}
      - POSTGRESQL_PASSWORD=${DB_PASSWORD:-root}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME:-postgres}', '-d', '${DB_DATABASE:-mediaServer}']
      interval: 5s
      timeout: 2s
      retries: 10
    networks:
      - mediaserver-db
volumes:
  db-data:
    driver: local
  shared-env:
    external: true
    name: mediaserver-shared-env

networks:
  default:
    driver: bridge
  mediaserver-db:
    driver: bridge
  mediaserver-redis:
    driver: bridge
