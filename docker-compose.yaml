services:
    # app:
    #     build:
    #         context: .
    #         dockerfile: Dockerfile
    #     container_name: MediaServer
    #     volumes:
    #         - ./data/media:/var/www/html/storage/public/media
    #     # - type: bind
    #     # source: ./media
    #     # target: /storage/public/media
    #     restart: unless-stopped
    #     networks:
    #         - docker-network
    #     ports:
    #         - 9000:9000
    #     depends_on:
    #         - db
    #     environment:
    #         - DB_HOST=db
    #         - DB_PORT=5432
    #         - DB_DATABASE=mediaServer
    #         - DB_USERNAME=postgres
    #         - DB_PASSWORD=root
    #     # entrypoint: ['sh', '/usr/local/bin/entrypoint.sh']

    # # queue-worker:
    # #     build:
    # #         context: .
    # #         dockerfile: Dockerfile
    # #     restart: unless-stopped
    # #     networks:
    # #         - docker-network
    # #     depends_on:
    # #         - db
    # #         - app
    # #     command: php artisan queue:work
    # # pulse-worker:
    # #     build:
    # #         context: ./
    # #         dockerfile: Dockerfile
    # #     restart: unless-stopped
    # #     networks:
    # #         - docker-network
    # #     depends_on:
    # #         - db
    # #     command: php artisan pulse:check
    # # reverb-worker:
    # #     build:
    # #         context: ./
    # #         dockerfile: Dockerfile
    # #     restart: unless-stopped
    # #     networks:
    # #         - docker-network
    # #     ports:
    # #         - 6001:6001
    # #     depends_on:
    # #         - db
    # #     command: php artisan reverb:start

    # caddy:
    #     image: caddy:2.9.1-alpine
    #     ports:
    #         - 8080:8080
    #         # - 443:443
    #         # - 443:443/udp
    #     volumes:
    #         - .:/var/www/html
    #         - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
    #     networks:
    #         - docker-network
    #     depends_on:
    #         - app
    # nginx:
    #   image: nginx:latest
    #   container_name: nginx
    #   volumes:
    #     - ./:/var/www/html
    #     - ./docker/nginx/app.conf:/etc/nginx/conf.d/default.conf
    #   ports:
    #     - "8000:80"
    #   depends_on:
    #     - app
    #   networks:
    #     - docker-network

    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: MediaServer
        volumes:
            - ./data/media:/var/www/html/storage/app/public/media
        # restart: unless-stopped
        networks:
            - docker-network
        ports:
            - 8080:80
        depends_on:
            - db
        environment:
            - DB_HOST=db
            - DB_PORT=5432
            - DB_DATABASE=mediaServer
            - DB_USERNAME=postgres
            - DB_PASSWORD=root
        # entrypoint: ['sh', '/var/www/html/docker/entrypoint.sh']
    db:
        image: bitnami/postgresql:17.2.0
        platform: linux/amd64
        ports:
            - 5432:5432
        restart: always
        volumes:
            - db-data:/bitnami/postgresql
        environment:
            - POSTGRESQL_DATABASE=${DB_DATABASE}
            - POSTGRESQL_USERNAME=${DB_USERNAME}
            - POSTGRESQL_PASSWORD=${DB_PASSWORD}
        networks:
            - docker-network

volumes:
    db-data:

networks:
    docker-network:
        driver: bridge
